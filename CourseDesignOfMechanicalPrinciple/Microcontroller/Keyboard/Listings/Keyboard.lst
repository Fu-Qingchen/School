C51 COMPILER V9.59.0.0   KEYBOARD                                                          11/18/2018 21:36:22 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE KEYBOARD
OBJECT MODULE PLACED IN .\Objects\Keyboard.obj
COMPILER INVOKED BY: E:\Keil_v5\C51\BIN\C51.EXE Keyboard.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -Keyboard.lst) TABS(2) OBJECT(.\Objects\Keyboard.obj)

line level    source

   1          /*************************************************
   2          * @Author: fuqingchen@whut.edu.cn
   3          * @Date: 2018-11-12 20:06:29
   4          * @Description: 电话键盘&拨号的模拟
   5          *************************************************/
   6          
   7          #include <reg51.h>
   8          #include <intrins.h>
   9          #include <string.h>
  10          #define KEY P0  //分别读取A,B,C,D,1,2,3
  11          #define LCD P1  //分别控制D0,D1,D2,D3,D4,D5,D6,D7
  12          sbit SPEAKER = P3 ^ 7;  //控制蜂鸣器
  13          sbit RS = P2 ^ 0; //控制RS
  14          sbit RW = P2 ^ 1; //控制RW
  15          sbit E  = P2 ^ 2; //控制E
  16          unsigned char str[16];  //LCD1602第二行输出内容
  17          
  18          /*************************************************
  19          * @Description: 延时函数
  20          * @Input: t:延长的时间
  21          *************************************************/
  22          void delay(unsigned int t) {
  23   1        unsigned char i;
  24   1        while (t--) {
  25   2          for (i = 0; i<120; i++);
  26   2        }
  27   1      }
  28          
  29          /*************************************************
  30          * @Description: 蜂鸣器发声
  31          *************************************************/
  32          void show_speaker() {
  33   1        unsigned char sound;
  34   1        for (sound = 0; sound < 50; sound++)
  35   1        {
  36   2          SPEAKER = 0;
  37   2          delay(1);
  38   2          SPEAKER = 1;
  39   2          delay(1);
  40   2        }
  41   1      }
  42          
  43          /*************************************************
  44          * @Description: LCD1602读状态(查忙)
  45          *************************************************/
  46          void check_busy_LCD() {
  47   1        unsigned char pin;
  48   1        do
  49   1        {
  50   2          pin = 0xff;
  51   2          E = 0;
  52   2          RS = 0; RW = 1; E = 1;  //LCD读状态控制信号
  53   2          pin = LCD;
  54   2        } while (pin & 0x80);
C51 COMPILER V9.59.0.0   KEYBOARD                                                          11/18/2018 21:36:22 PAGE 2   

  55   1        E = 0;
  56   1      }
  57          
  58          /*************************************************
  59          * @Description: LCD1602写命令
  60          * @Input: com:要写入的命令
  61          *************************************************/
  62          void write_command_LCD(unsigned char com) {
  63   1        check_busy_LCD();
  64   1        RS = 0; RW = 0; //LCD写命令控制信号
  65   1        E = 0; LCD = com; E = 1;  //写命令正脉冲
  66   1        _nop_(); E = 0; delay(1);
  67   1      }
  68          
  69          /*************************************************
  70          * @Description: LCD1602写数据
  71          * @Input: date:要写入的数据
  72          *************************************************/
  73          void write_data_LCD(unsigned char date) {
  74   1        check_busy_LCD();
  75   1        RS = 1; RW = 0; //LCD写数据控制信号
  76   1        E = 0; LCD = date; E = 1; //写数据正脉冲
  77   1        _nop_(); E = 0; delay(1);
  78   1      }
  79          
  80          /*************************************************
  81          * @Description: LCD1602初始化
  82          *************************************************/
  83          void initial_LCD() {
  84   1        write_command_LCD(0x38);  //两行显示，5*7点阵，8位数据接口
  85   1        _nop_();
  86   1        write_command_LCD(0x0C);  //整体显示，光标关，无显示
  87   1        _nop_();
  88   1        write_command_LCD(0x04);  //整屏不移位
  89   1        _nop_();
  90   1        write_command_LCD(0x01);  //显示清屏
  91   1      }
  92          
  93          /*************************************************
  94          * @Description: LCD1602显示字符串
  95          * @Input: address:字符串位置;*s:字符串;length:字符串长度
  96          *************************************************/
  97          void show_string_LCD(unsigned char address, unsigned char *s, unsigned int length) {
  98   1        unsigned int i;
  99   1        write_command_LCD(address);
 100   1        delay(5);
 101   1        for (i = 0; i < length; i++)
 102   1        {
 103   2          write_data_LCD(*(s + i));
 104   2        }
 105   1      }
 106          
 107          /*************************************************
 108          * @Description: 根据输入在LCD上的操作
 109          * @Input: no:读取的键盘字符[0,1,2,3,4,5,6,7,8,9,*,#]
 110          *************************************************/
 111          void get_No(int no) {
 112   1        char str2;
 113   1        if (no < 10)  //输入数字时，加一位数字
 114   1        {
 115   2          str2 = no + 48; //将no给str2,48为ASCII码
 116   2          if (strlen(str)<16)
C51 COMPILER V9.59.0.0   KEYBOARD                                                          11/18/2018 21:36:22 PAGE 3   

 117   2          {
 118   3            strcat(str, &str2); //加一位数字
 119   3          }
 120   2        }
 121   1        else if (no == 10)  //输入 * 时，去一位数字
 122   1        {
 123   2          write_command_LCD(0x01);  //显示清屏
 124   2          delay(5);
 125   2          show_string_LCD(0x82, "#FU_QINGCHEN", 12);
 126   2          *(str + strlen(str) - 1) = 0;
 127   2          *(str + strlen(str)) = 0;
 128   2        }
 129   1        else    //输入 # 时，清屏
 130   1        {
 131   2          *str = 0;
 132   2          write_command_LCD(0x01);  //显示清屏
 133   2          delay(5);
 134   2          show_string_LCD(0x82, "#FU_QINGCHEN", 12);
 135   2          _nop_();
 136   2          delay(500);
 137   2        }
 138   1        show_string_LCD(0xC0, str, strlen(str));
 139   1        delay(5);
 140   1      }
 141          
 142          /*************************************************
 143          * @Description: 输入 # 时清屏
 144          *************************************************/
 145          void get_sign() {
 146   1        //write_command_LCD(0x01);  //显示清屏
 147   1        delay(50);
 148   1        show_string_LCD(0x82, "#FU_QINGCHEN", 12);
 149   1        _nop_();
 150   1        delay(100);
 151   1      }
 152          
 153          /*************************************************
 154          * @Description: 读取键盘的输入内容
 155          *************************************************/
 156          void getKeyValue() {
 157   1        int i;
 158   1        unsigned char R;  //行扫描值
 159   1        unsigned char C;  //列扫描值
 160   1        unsigned char RC; //坐标
 161   1        unsigned char code_key;
 162   1        KEY = 0x0F; //ABCD取高电平，123取低电平
 163   1        if (KEY!=0x0F)  //KEY出现变化说明输入
 164   1        {
 165   2          //delay(15);  //去抖动
 166   2          if ((KEY|0xF0)!=0xFF)
 167   2          {
 168   3            show_speaker();
 169   3            R = (~KEY) & 0x0F;  //获取行值
 170   3            code_key = 0xEF;
 171   3            C = 0x10;
 172   3            for (i = 0; i < 3; i++)
 173   3            {
 174   4              KEY = code_key;
 175   4              if ((KEY|0xF0)!=0xFF)
 176   4              {
 177   5                RC = R | C;
 178   5                switch (RC)
C51 COMPILER V9.59.0.0   KEYBOARD                                                          11/18/2018 21:36:22 PAGE 4   

 179   5                {
 180   6                case 0x28:get_No(0); break;
 181   6                case 0x11:get_No(1); break;
 182   6                case 0x21:get_No(2); break;
 183   6                case 0x41:get_No(3); break;
 184   6                case 0x12:get_No(4); break;
 185   6                case 0x22:get_No(5); break;
 186   6                case 0x42:get_No(6); break;
 187   6                case 0x14:get_No(7); break;
 188   6                case 0x24:get_No(8); break;
 189   6                case 0x44:get_No(9); break;
 190   6                case 0x18:get_No(10); break;
 191   6                case 0x48:get_No(11); break;
 192   6                }
 193   5                break;
 194   5              }
 195   4              code_key = _crol_(code_key, 1);
 196   4              C = _crol_(C, 1);
 197   4            }
 198   3          }
 199   2        }
 200   1      }
 201          
 202          void main() {
 203   1        initial_LCD();
 204   1        while (1)
 205   1        {
 206   2          get_sign();
 207   2          getKeyValue();
 208   2          //write_command_LCD(0x01);  //清屏
 209   2          delay(100);
 210   2        }
 211   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    638    ----
   CONSTANT SIZE    =     13    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
